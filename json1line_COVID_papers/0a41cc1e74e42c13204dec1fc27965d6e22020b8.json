{"paper_id": "0a41cc1e74e42c13204dec1fc27965d6e22020b8", "metadata": {"title": "Dynamic Language Models for Continu-ously Evolving Content", "authors": [{"first": "Marc", "middle": [], "last": "Dersky", "suffix": "", "affiliation": {}, "email": ""}, {"first": "", "middle": [], "last": "Najork", "suffix": "", "affiliation": {}, "email": ""}]}, "abstract": [{"text": "The content on the web is in a constant state of flux. New entities, issues, and ideas continuously emerge, while the semantics of the existing conversation topics gradually shift. In recent years, pretrained language models like BERT greatly improved the stateof-the-art for a large spectrum of content understanding tasks. Therefore, in this paper, we aim to study how these language models can be adapted to better handle continuously evolving web content.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "In our study, we first analyze the evolution of 2013 -2019 Twitter data, and unequivocally confirm that a BERT model trained on past tweets would heavily deteriorate when directly applied to data from later years. Then, we investigate two possible sources of the deterioration: the semantic shift of existing tokens and the sub-optimal or failed understanding of new tokens. To this end, we both explore two different vocabulary composition methods, as well as propose three sampling methods which help in efficient incremental training for BERT-like models. Compared to a new model trained from scratch offline, our incremental training (a) reduces the training costs, (b) achieves better performance on evolving content, and (c) is suitable for online deployment. The superiority of our methods is validated using two downstream tasks. We demonstrate significant improvements when incrementally evolving the model from a particular base year, on the task of Country Hashtag Prediction, as well as on the OffensEval 2019 task.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "\u2022 Information systems \u2192 Web mining.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Our world is changing, and so are our languages [1, 21] . New entities, issues, and words are emerging rapidly. This is reflected in periodic entry additions to online dictionaries. For instance, during the Covid-19 pandemic, new words like \"Covid\" and \"Zoom\" have been added to the Oxford English Dictionary (OED) 1 . In addition, the usage and context of the existing words is constantly evolving to better describe our times and customs. For instance, \"flattening the curve\", which was previously an esoteric scientific term, recently became a commonplace phrase with its own sub-entry in the OED. This continuous language evolution is even more evident on the web and in social media content.", "cite_spans": [{"start": 48, "end": 51, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 52, "end": 55, "text": "21]", "ref_id": "BIBREF20"}, {"start": 315, "end": 316, "text": "1", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "Prior works show that new words and semantic evolution pose a crucial challenge in many NLP tasks, leading to a significant performance drop for word embedding based models (eg, word2vec [30] ) [24, 32] . In recent years, pre-trained transformer based language models like BERT [11] greatly improved the state-of-the-art for a large spectrum of NLP tasks, but the study of their capability to handle dynamic content has been limited. One relevant study by Lazaridou et al. [25] shows that Transformer-XL [10] , a left-to-right language model trained on current data, still performs poorly on future instances for news and scientific articles. A natural question is, can a bidirectional language model like BERT be successfully adapted to continuously evolving content?", "cite_spans": [{"start": 187, "end": 191, "text": "[30]", "ref_id": "BIBREF29"}, {"start": 194, "end": 198, "text": "[24,", "ref_id": "BIBREF23"}, {"start": 199, "end": 202, "text": "32]", "ref_id": "BIBREF31"}, {"start": 278, "end": 282, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 456, "end": 468, "text": "Lazaridou et", "ref_id": null}, {"start": 473, "end": 477, "text": "[25]", "ref_id": "BIBREF24"}, {"start": 504, "end": 508, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "To answer this question, we first analyze the evolution of 2013 -2019 Twitter data, and unequivocally confirm that a BERT model trained on past tweets would heavily deteriorate when directly applied to data from later years. We further investigate the two possible causes for deterioration, namely, new tokens and semantic shift of existing tokens. We show (see Figure 2 ) that there is a huge vocabulary shift over the years, eg, the most frequent words for 2014 and 2019 change by 18.31% and 37.49%, respectively, compared to 2013, and the most frequent wordpieces [46] (subwords used by BERT) shift by roughly the same extent (see Figure 3 ). Given this churn, wordpiece representations are likely to be sub-optimal with new data, leading to a decrease in the effectiveness of the learned representations.", "cite_spans": [{"start": 567, "end": 571, "text": "[46]", "ref_id": "BIBREF45"}], "ref_spans": [{"start": 362, "end": 370, "text": "Figure 2", "ref_id": "FIGREF2"}, {"start": 634, "end": 642, "text": "Figure 3", "ref_id": "FIGREF4"}], "section": "INTRODUCTION"}, {"text": "Therefore, we propose to dynamically update the wordpiece vocabulary, by adding emerging wordpieces and removing stale ones, aiming at keeping the vocabulary up-to-date, while maintaining its constant size for ensuring efficient model parameterization. In addition, we examine two different vocabulary composition methods for Twitter hashtags: (a) feeding each hashtag after stripping \"#\" to the WordPiece tokenizer and (b) retaining whole popular hashtags as tokens in the wordpiece vocabulary, as they may capture some of the current zeitgeist semantics. We notice that keeping popular whole hashtags in the vocabulary could bring over 25% gain across different metrics for hashtag sensitive tasks.", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "To examine the semantic shift, we select a few country hashtags as a case study. By comparing their top co-occurring hashtags and words, we show that the semantics of the country hashtags shift over the years. We, thus, propose to incrementally pre-train BERT with new data as it appears, so that the model can adapt to the language evolution. However, simply using all new data can be very costly, as training BERT is computationally expensive [38] . To reduce the amount of the required training data, we propose three effective sampling approaches to iteratively mine representative examples that contain new tokens, or tokens which potentially exhibit large semantic shifts, for incremental learning.", "cite_spans": [{"start": 445, "end": 449, "text": "[38]", "ref_id": "BIBREF37"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "Our incremental learning reduces the training cost by 76.9% compared to training an entirely new model, while also achieving better prevention of model deterioration as new content emerges. We evaluate the model performance on two downstream tasks on a large Twitter dataset -Country Hashtag Prediction and offensive tweet prediction (OffensEval 2019 task [48] ). We demonstrate significant improvements for our incremental training methods which use effective sampling over baselines in these evaluations.", "cite_spans": [{"start": 356, "end": 360, "text": "[48]", "ref_id": "BIBREF47"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "To deploy our model in production, we first generate model vocabulary using a particular year's data, pre-train the model, and fine-tune it using task data. Figure 1 gives an overview of our proposed architecture. We continuously monitor the MLM loss on real-time data stream and on detecting performance deterioration for the current model, we draw hard examples from a weighted data store using an effective sampling strategy described in Section 4.3. We update the model vocabulary and incrementally train the model using the hard examples. The model is further fine-tuned and deployed. In this way, the entire life-cycle of dynamic model updates (vocabulary update, pre-training, and fine-tuning) can occur while continuously serving live traffic.", "cite_spans": [], "ref_spans": [{"start": 157, "end": 165, "text": "Figure 1", "ref_id": "FIGREF0"}], "section": "INTRODUCTION"}, {"text": "To summarize, the main contributions of this work are as follows:", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "\u2022 To the best of our knowledge, we are the first to study dynamic BERT modeling for continuously evolving content. \u2022 We propose a simple yet effective method to dynamically update BERT model vocabulary. \u2022 We observe that keeping popular whole hashtags in model vocabulary can benefit certain tasks and validate our dynamic BERT modeling technique based on two different model vocabulary compositions. \u2022 We propose three different sampling methods for more efficient incremental BERT training based on hard example mining. \u2022 One of our proposed methods can also be used to determine when incremental training should be triggered in real-world applications.", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "As language evolves, new words are emerging and the semantics of existing words are drifting [1, 21] . In this section, we first discuss how the prior work addresses these two challenges in language modeling, and then summarize the existing work on incremental learning (which is applied in our work in the context of dynamic language modeling).", "cite_spans": [{"start": 93, "end": 96, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 97, "end": 100, "text": "21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "RELATED WORK"}, {"text": "New words that are out of vocabulary (OOV) pose great challenges to many NLP tasks [32] . The model performance could be significantly hurt by a high OOV rate, especially for morphologically rich languages and domains with dynamic vocabularies (eg, social media) [20] . Simply designing a language model with overly large vocabularies cannot completely resolve the OOV issue, as new words are always emerging, while also being parametrically expensive [29, 37] . In language modeling, several approaches have been proposed to address this issue. As the embeddings of new words do not exist in the training data, one line of work replaces all new words by a special token (eg, \"UNK\") with shared embeddings [16] or assigns unique random embeddings to each new word [12] . In a separate line of studies, researchers break-down a word to more fine-grained units, including characters [2, 20, 28, 32, 49] , character-based ngrams [7, 41, 45] , and subwords (eg, wordpiece [46] and byte-pairencodings [22, 37] ). This could reduce OOV rate since these finegrained units are less likely to be unseen at the training stage. From modeling aspect, these prior works leverage the morphological structure for learning embeddings, and often adopt a pooling layer (eg, CNN, LSTM) to combine the embeddings of fine-grained units to construct the word embeddings. One limitation of this direction is that some words can not be inferred from their subunits (eg, a person's name or a Twitter hashtag).", "cite_spans": [{"start": 83, "end": 87, "text": "[32]", "ref_id": "BIBREF31"}, {"start": 263, "end": 267, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 452, "end": 456, "text": "[29,", "ref_id": "BIBREF28"}, {"start": 457, "end": 460, "text": "37]", "ref_id": "BIBREF36"}, {"start": 706, "end": 710, "text": "[16]", "ref_id": "BIBREF15"}, {"start": 764, "end": 768, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 881, "end": 884, "text": "[2,", "ref_id": "BIBREF1"}, {"start": 885, "end": 888, "text": "20,", "ref_id": "BIBREF19"}, {"start": 889, "end": 892, "text": "28,", "ref_id": "BIBREF27"}, {"start": 893, "end": 896, "text": "32,", "ref_id": "BIBREF31"}, {"start": 897, "end": 900, "text": "49]", "ref_id": "BIBREF48"}, {"start": 926, "end": 929, "text": "[7,", "ref_id": "BIBREF6"}, {"start": 930, "end": 933, "text": "41,", "ref_id": "BIBREF40"}, {"start": 934, "end": 937, "text": "45]", "ref_id": "BIBREF44"}, {"start": 968, "end": 972, "text": "[46]", "ref_id": "BIBREF45"}, {"start": 996, "end": 1000, "text": "[22,", "ref_id": "BIBREF21"}, {"start": 1001, "end": 1004, "text": "37]", "ref_id": "BIBREF36"}], "ref_spans": [], "section": "Handling New Words"}, {"text": "The third line of research attempts to explicitly generate OOV word embeddings \"on the fly\" from context such as the definitions of the OOV word in a dictionary [3] and example sentences that contain the OOV word [15, 17, 19, 26] . Most works adopt a simple pooling approach, eg, summation [15] , mean pooling [3, 19] to aggregate the embeddings of the contextual words as the OOV word embeddings, while Hu et al. [17] propose an attention-based hierarchical context encoder to encode and aggregate both context and subword information. In a multilingual setting, Wang et al. [44] adopt joint and mixture mapping methods from pre-trained embeddings of low resource languages to that of English at subword level to address this.", "cite_spans": [{"start": 161, "end": 164, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 213, "end": 217, "text": "[15,", "ref_id": "BIBREF14"}, {"start": 218, "end": 221, "text": "17,", "ref_id": "BIBREF16"}, {"start": 222, "end": 225, "text": "19,", "ref_id": "BIBREF18"}, {"start": 226, "end": 229, "text": "26]", "ref_id": "BIBREF25"}, {"start": 290, "end": 294, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 310, "end": 313, "text": "[3,", "ref_id": "BIBREF2"}, {"start": 314, "end": 317, "text": "19]", "ref_id": "BIBREF18"}, {"start": 414, "end": 418, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 576, "end": 580, "text": "[44]", "ref_id": "BIBREF43"}], "ref_spans": [], "section": "Handling New Words"}, {"text": "In our work, we adopt the Transformer-based language model BERT [11] , which uses wordpieces as the basic units. Though the prior work shows that subword representation is a useful strategy for dealing with new words, we show that there is still a significant model downgrade for ever evolving content like Twitter. We, thus, propose to dynamically update the vocabularies by swapping the stale tokens with the popular emerging ones.", "cite_spans": [{"start": 64, "end": 68, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Handling New Words"}, {"text": "The semantics of existing words keep evolving. Kutuzov et al. [24] conduct a comprehensive review on this topic, and we only briefly discuss the most relevant works here. As case studies, early works choose a few words to discuss their semantic drifts over widely different time periods [6, 42, 43] . The more recent works aim to automatically detect word semantic changes where the semantics of words are in distributional representation (eg, word-context matrix) [9, 13, 36] or, recently more popular, distributed representation (ie, word embeddings) [14] . These works usually train different word representation models with documents from different time slices, and then compare the word semantic representations over time using cosine distance to quantify the semantic change.", "cite_spans": [{"start": 62, "end": 66, "text": "[24]", "ref_id": "BIBREF23"}, {"start": 287, "end": 290, "text": "[6,", "ref_id": "BIBREF5"}, {"start": 291, "end": 294, "text": "42,", "ref_id": "BIBREF41"}, {"start": 295, "end": 298, "text": "43]", "ref_id": "BIBREF42"}, {"start": 465, "end": 468, "text": "[9,", "ref_id": "BIBREF8"}, {"start": 469, "end": 472, "text": "13,", "ref_id": "BIBREF12"}, {"start": 473, "end": 476, "text": "36]", "ref_id": "BIBREF35"}, {"start": 553, "end": 557, "text": "[14]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Semantic Shift over Time"}, {"text": "As each word embedding model is trained separately, the learned embeddings across time may not be placed in the same latent space [24] . Several approaches have been proposed to resolve this alignment issue as a second step [14, 23, 50] . For instance, Kulkarni et al. [23] use a linear transformation that preserves general vector space structure to align learned embeddings across time-periods and Hamilton et al. [14] use orthogonal Procrustes to perform embedding alignments while preserving cosine similarities.", "cite_spans": [{"start": 130, "end": 134, "text": "[24]", "ref_id": "BIBREF23"}, {"start": 224, "end": 228, "text": "[14,", "ref_id": "BIBREF13"}, {"start": 229, "end": 232, "text": "23,", "ref_id": "BIBREF22"}, {"start": 233, "end": 236, "text": "50]", "ref_id": "BIBREF49"}, {"start": 269, "end": 273, "text": "[23]", "ref_id": "BIBREF22"}, {"start": 416, "end": 420, "text": "[14]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Semantic Shift over Time"}, {"text": "Other works attempt to simultaneously learn time-aware embeddings over all time periods and resolve the alignment problem [4, 35, 47] . Yao et al. [47] propose to enforce alignment through regularization, Bamler et al. [4] develop a dynamic skip-gram model that combines a Bayesian version of the skip-gram model [5] with a latent time series, and Rudolph et al. [34] propose dynamic embeddings built on exponential family embeddings to capture sequential changes in the representation of the data.", "cite_spans": [{"start": 122, "end": 125, "text": "[4,", "ref_id": "BIBREF3"}, {"start": 126, "end": 129, "text": "35,", "ref_id": "BIBREF34"}, {"start": 130, "end": 133, "text": "47]", "ref_id": "BIBREF46"}, {"start": 147, "end": 151, "text": "[47]", "ref_id": "BIBREF46"}, {"start": 219, "end": 222, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 313, "end": 316, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 363, "end": 367, "text": "[34]", "ref_id": "BIBREF33"}], "ref_spans": [], "section": "Semantic Shift over Time"}, {"text": "Though there are plenty of prior works, most of them are based on non-contextualized embeddings and limited work has been done for Transformer-based language models. The most relevant work is by [25] who demonstrate that Transformer-XL [10] (a left-to-right autoregressive language model) handles semantic shifts poorly in news and scientific domains, and highlight the importance of adapting language models to continuous stream of new information. In this work, we aim to bridge this gap and propose to detect and adapt to semantic drift using BERT in a training framework based on the incremental learning research.", "cite_spans": [{"start": 195, "end": 199, "text": "[25]", "ref_id": "BIBREF24"}, {"start": 236, "end": 240, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Semantic Shift over Time"}, {"text": "Incremental learning is a family of machine learning methods that use continuous input data (eg, data streams) to expand the capability of an existing model, such as gradually increasing the number of classes for a classifier. One challenge that incremental learning faces is catastrophic forgetting, namely a dramatic performance decrease on the old classes when training data with new classes is being added incrementally [8] . This is even more evident for the deep learning models [33, 39] . Training a model from scratch with both old and new data seems to remedy this issue but is expensive in terms of computational resources as well as carbon emissions [40] . To mitigate this, one line of work proposes to select a representative memory from the old data and then, incrementally train the model with both memory and the new data [8] . Other works utilize distillation loss [18] aiming at retaining the knowledge from old classes, and combining this with the standard cross-entropy loss to learn to classify the classes [8, 27] .", "cite_spans": [{"start": 424, "end": 427, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 485, "end": 489, "text": "[33,", "ref_id": "BIBREF32"}, {"start": 490, "end": 493, "text": "39]", "ref_id": "BIBREF38"}, {"start": 661, "end": 665, "text": "[40]", "ref_id": "BIBREF39"}, {"start": 838, "end": 841, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 882, "end": 886, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 1028, "end": 1031, "text": "[8,", "ref_id": "BIBREF7"}, {"start": 1032, "end": 1035, "text": "27]", "ref_id": null}], "ref_spans": [], "section": "Incremental Learning"}, {"text": "In our work, we adopt an incremental learning framework to build the dynamic BERT model based on continuously evolving content where the emerging vocabulary entries can be considered as new classes. Different from typical incremental learning, the semantics of existing words (ie, old classes) may also change over time. As such, we propose to intentionally update/forget the information of old classes that have an obvious semantic drift. This work is also different from the BERTweet model described in [31] which is pre-trained with data over several years (2012 -2019), whereas our models are incrementally trained to keep their performance on evolving content, from base models pre-trained with a particular year's data.", "cite_spans": [{"start": 505, "end": 509, "text": "[31]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Incremental Learning"}, {"text": "Our language is continuously evolving, especially for the content on the web. Can a language model like BERT that is pre-trained on a large dataset adapt well to the evolving content? To answer this, we use a large public Twitter corpus crawled from 2013 -2019 for preliminary experiments and analysis. We pre-train yearbased Twitter BERT models on the Masked Language Modeling (MLM) task, using the tweets from a particular year. All of them are base models (12 layers) and initialized using the public BERT pre-trained on Wikipedia and books [11] . For model evaluation, we use two downstream tasks, Country Hashtag Prediction (predicting the associated country hashtag for a tweet from 16 pre-selected country hashtags) and OffensEval 2019 [48] (a shared task from SemEval 2019 to predict if a tweet is offensive or not). The data for Country Hashtag Prediction is curated from the 2014 and 2017 tweets in our dataset, while OffensEval is using tweets posted in 2019. The dataset and experiments are detailed in Section 5.", "cite_spans": [{"start": 544, "end": 548, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 743, "end": 747, "text": "[48]", "ref_id": "BIBREF47"}], "ref_spans": [], "section": "DYNAMIC LANGUAGE MODELING"}, {"text": "Our results unequivocally show that BERT pre-trained on past tweets heavily deteriorates when directly applied to data from later years. Take the results of 2017 Country Hashtag Prediction as an example ( Table 1 ). The 2016 model achieves 0.418 in Micro-F1, 0.265 in Macro-F1, and 0.411 in Accuracy, which is significantly worse than the 2017 model (0.561 in Micro-F1, 0.493 in Macro-F1, and 0.550 in Accuracy). This suggests the necessity to keep the model informed of the evolving content. To gain more insights, we investigate two possible causes for the performance deterioration: (a) vocabulary shift and (b) semantic shift of existing words, and propose dynamic modeling solutions to address these two challenges. ", "cite_spans": [], "ref_spans": [{"start": 205, "end": 212, "text": "Table 1", "ref_id": "TABREF0"}], "section": "DYNAMIC LANGUAGE MODELING"}, {"text": "Vocabulary is the foundation for language models. Vocabulary can consist of natural words and more fine-grained units like subwords (eg, wordpieces), character-based n-grams, or even single characters. Out of vocabulary (OOV) tokens pose great challenge to language models as their embeddings do not exist in the model training [20, 32] . To deal with this, a common practice is to map the OOV tokens to a special \"UNK\" token such that all OOV tokens share the same embeddings. Obviously, shared embeddings lose specificity and are not informative. Prior works [20, 32, 45, 46, 49] show that fine-grained units are effective in reducing OOV rate as a new/unseen word could still be broken down into existing tokens in the vocabulary. A natural question is, can wordpieces that are adopted by BERT adapt well to the new words on Twitter? To this end, we conduct wordpiece vocabulary shift analysis. Moreover, we perform similar analysis for natural words and hashtags. We first describe the three token variants in detail:", "cite_spans": [{"start": 328, "end": 332, "text": "[20,", "ref_id": "BIBREF19"}, {"start": 333, "end": 336, "text": "32]", "ref_id": "BIBREF31"}, {"start": 561, "end": 565, "text": "[20,", "ref_id": "BIBREF19"}, {"start": 566, "end": 569, "text": "32,", "ref_id": "BIBREF31"}, {"start": 570, "end": 573, "text": "45,", "ref_id": "BIBREF44"}, {"start": 574, "end": 577, "text": "46,", "ref_id": "BIBREF45"}, {"start": 578, "end": 581, "text": "49]", "ref_id": "BIBREF48"}], "ref_spans": [], "section": "Vocabulary Shift"}, {"text": "\u2022 Natural Words These are innate vocabulary tokens commonly used by humans. Their change directly reflects changes in the general language. \u2022 Subword Segments WordPiece [11] and SentencePiece [22] are arguably the two most popular methods for machine language tokenization. They both break-down natural words into subwords, and they attest the fact that subword segmentations are not only more effectively utilized by machines, but can also reduce the size of the vocabulary. In this paper, we adopt the WordPiece method but our discussions can be applied to any tokenization method. \u2022 Hashtags These are special tokens that start with a \"#\" symbol, widely used on social media platforms like Twitter, Facebook, and Instagram. Compared to natural words, hashtags have a higher change rate. A hashtag can be a label of a message, or can be directly a part of the message content. Hashtags are extremely important for dynamic content modeling, since they often indicate the key topics of the social media post. Based on our 2013 -2019 Twitter dataset, we create the top 40K vocabulary for natural words, wordpieces, and hashtags in each year. All tokens are lowercased in pre-processing. For wordpieces, the WordPiece tokenizer is applied to each year's tweets separately. We then compare these vocabularies and plot their shift rates for natural words in Figure 2 , and for wordpieces and hashtags in Figure 3 in Appendix A.A. The shift is defined as:", "cite_spans": [{"start": 169, "end": 173, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 192, "end": 196, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [{"start": 1354, "end": 1362, "text": "Figure 2", "ref_id": "FIGREF2"}, {"start": 1400, "end": 1408, "text": "Figure 3", "ref_id": "FIGREF4"}], "section": "Vocabulary Shift"}, {"text": "We see that all three types of tokens have huge vocabulary shifts. Note that our analysis is based on the top 40K tokens. It is likely that using a larger vocabulary may reduce the year-to-year shifts/OOV rates. However, the memory limitation and computational cost prohibit extremely large vocabulary for mainstream pre-trained language models. Most models are only able to keep tens of thousands of tokens in the model vocabulary. For instance, the original BERT uses 30K wordpieces [11] . Using large vocabularies would make models parametrically expensive and render them infeasible for real-world applications/deployment.", "cite_spans": [{"start": 485, "end": 489, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Vocabulary Shift"}, {"text": "Though the year-to-year vocabulary discrepancies are huge, we observe that the actual wordpiece OOV rate is low when applying a model to data from later years. For instance, with the wordpiece vocabulary curated from 2013 tweets, the OOV rate for 2014 data is 0.54%. The reason is that the WordPiece tokenizer could still decompose a new/unseen word from later years into known subwords or even characters. However, this does not necessarily guarantee that the semantics of the new word is well preserved. For instance, the words \"griezmann\" and \"#unesco\" from 2014 data are tokenized into the wordpieces {\"gr\", \"##ie\", \"##zman\", \"##n\"} and {\"#un\", \"##es\", \"##co\"}, respectively, using the 2013 vocabulary. It is difficult for BERT to capture the correct semantics from these wordpieces.", "cite_spans": [], "ref_spans": [], "section": "Sub-optimal Tokenization for New Words"}, {"text": "To further investigate this, we replace the wordpiece vocabulary of a 2017 model with the vocabulary from 2013 data, and retrain the model on 2017 data. For the 2017 Country Hashtag Prediction task, we observe that using an out-dated vocabulary decreases the model performance by 6.57% (in terms of Micro-F1), relative to using the vocabulary from the same year. This confirms that subword representation like wordpieces is not an optimal solution to handle new words in rapidly evolving content.", "cite_spans": [], "ref_spans": [], "section": "Sub-optimal Tokenization for New Words"}, {"text": "As hashtags often mark the topics in the posts, we believe that understanding hashtags is key to the language model quality. Hashtags can consist of a single word (eg, \"#amazon\"), multiple words (eg, \"#wordcup2014\"), or some characters indicating an abbreviation (eg, \"#nfl\"). There are two straightforward approaches to incorporate hashtags into the modeling. One is to strip the \"#\" and treat hashtags as normal natural words, feeding them to the WordPiece tokenizer. It is very likely that many hashtags, especially those that have multiple words, are segmented into subwords or even characters. The strong topical information may be lost due to the segmentation. Hashtag \"#ItsComingHome\", which means winning the Football World Cup is such an example. The WordPiece tokenizer decomposes it into three wordpieces \"Its\", \"Coming\", and \"Home\", which, however, poses difficulty for the model to relate these three wordpieces to their original meaning. To alleviate this, the second method to model hashtags is to include popular hashtags (with \"#') as intact tokens in the wordpiece vocabulary and only tokenize rarer ones as ordinary words.", "cite_spans": [], "ref_spans": [], "section": "Vocabulary Composition for Hashtags"}, {"text": "We compare the two hashtag vocabulary composition approaches on the aforementioned downstream tasks -Country Hashtag Prediction and OffensEval. From Table 2 , we see that including hashtags in the vocabulary largely boosts the model performance for the 2017 Country Hashtag Prediction task (using a model trained from scratch with 2017 data), improving the Micro-F1 from 0.314 to 0.561. On the other hand, for OffensEval (using a model trained from scratch with 2019 data), including hashtags does not bring any gains and slightly hurts the model performance as shown in Table 3 .", "cite_spans": [], "ref_spans": [{"start": 149, "end": 156, "text": "Table 2", "ref_id": "TABREF2"}, {"start": 571, "end": 578, "text": "Table 3", "ref_id": "TABREF3"}], "section": "Vocabulary Composition for Hashtags"}, {"text": "We attribute these different effects to the nature of the two tasks. For the Country Hashtag Prediction task, the model needs to understand the topics covered in the post well, and then make a prediction about the associated country. Hashtag tokens carry more contextual information than ordinary words. For instance, a country hashtag could carry semantics of events associated with this country and, would not just be limited to a regular country name that indicates a geographic location. Therefore, differentiating hashtags and regular words in the vocabulary is beneficial for this task. On the other hand, for the task of OffensEval, the dataset itself does not contain many hashtags, and most hashtags are not informative to determine whether a tweet is offensive or not. As such, including intact hashtags in the vocabulary is not beneficial.", "cite_spans": [], "ref_spans": [], "section": "Vocabulary Composition for Hashtags"}, {"text": "Based on these results, in the remainder of the paper, for the task of Country Hashtag Prediction, we will include popular whole hashtags in model vocabulary; for the task of OffensEval, we will break-down all hashtags into wordpieces, after stripping \"#\". ", "cite_spans": [], "ref_spans": [], "section": "Vocabulary Composition for Hashtags"}, {"text": "As we discussed in Section 3.1, wordpieces are not effective in handling rapidly evolving content that exhibits large vocabulary shifts. Instead of leveraging a static vocabulary, we argue that it is vital to dynamically update model vocabulary to reflect the evolving content. To this end, we propose a simple yet highly effective algorithm to add the most frequent new wordpieces and remove the outdated ones (ie, least likely to occur in the new wordpieces) from the vocabulary. We detail this approach in Algorithm 1 in Appendix A.B. For hashtag sensitive tasks like Country Hashtag Prediction, we also add/remove popular/unpopular whole hashtags in the vocabulary. Our goal is to keep the vocabulary up-to-date, while maintaining its constant size for ensuring efficient model parameterization.", "cite_spans": [], "ref_spans": [], "section": "Dynamic Updates to Model Vocabulary"}, {"text": "After replacing the outdated tokens with new ones, we continuously train the model with data sampled from the new timestamp. We will detail the training strategies in Section 4. Our later experiments show that this vocabulary updating approach is very beneficial for model performance (detailed in Section 5).", "cite_spans": [], "ref_spans": [], "section": "Dynamic Updates to Model Vocabulary"}, {"text": "Aside from emerging words, it is well known that the semantics of existing words keep evolving [6, 24, 42, 43] . To measure the semantic shift, one intuitive way is to compare their embeddings learned in different years. However, since each year's BERT model was trained separately and their semantic space may not be well aligned, direct comparisons may not be meaningful. Instead, we turn to the contextual words as a proxy of semantic representation.", "cite_spans": [{"start": 95, "end": 98, "text": "[6,", "ref_id": "BIBREF5"}, {"start": 99, "end": 102, "text": "24,", "ref_id": "BIBREF23"}, {"start": 103, "end": 106, "text": "42,", "ref_id": "BIBREF41"}, {"start": 107, "end": 110, "text": "43]", "ref_id": "BIBREF42"}], "ref_spans": [], "section": "Token Semantic Shift"}, {"text": "We use country hashtags in our Country Hashtag Prediction task as a case study. We pick 1,000 most frequently co-occurring words for the hashtags from 2014 and 2017 dataset, to confirm that the semantics are shifting significantly. Taking the three country hashtags \"#china\", \"#uk\", and \"#usa\" as examples, we compute the rates of shift in top contextual words for these hashtags as 44.07%, 45.80%, and 65.59%, respectively. These significant shifts can be explained by the widely varying topics seen for 2014 and 2017 for the respective countries. For instance, for the hashtag \"#usa\", many of the top topics (eg, \"#worldcup\", \"ronaldo\") for 2014 revolve around the Football World Cup, whereas in 2017, several top topics (eg, \"#maga\", \"#theresistance\") concern important developments in the US politics. Table 7 in Appendix A.F further shows five of the top co-occurring words for these hashtags that are representative of the topics and events. As with the prior work, we propose to continuously train the model with updated data to handle the semantic shift which is detailed in the following section.", "cite_spans": [], "ref_spans": [{"start": 806, "end": 813, "text": "Table 7", "ref_id": "TABREF10"}], "section": "Token Semantic Shift"}, {"text": "For our proposed approach, we aim to dynamically update the vocabulary -adding new tokens and removing obsolete ones -and adapt the semantics of the tokens to reflect the evolving content.", "cite_spans": [], "ref_spans": [], "section": "EFFECTIVE SAMPLING FOR INCREMENTAL TRAINING"}, {"text": "In addition to these vocabulary shifts, new web and social content is being continuously created en masse, eg, on an average, 500 million tweets are posted everyday and 200 billion tweets are created per year 2 . These motivate us to adopt an incremental learning framework to build our dynamic BERT model. As with typical incremental training [8, 18] , we need to learn new knowledge (eg, the semantics for new words) while retaining the model's existing knowledge (eg, keeping the meanings of words that do not have a semantic shift). In our case, however, we also need to intentionally update model's existing knowledge on those tokens which have a semantic shift.", "cite_spans": [{"start": 344, "end": 347, "text": "[8,", "ref_id": "BIBREF7"}, {"start": 348, "end": 351, "text": "18]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "EFFECTIVE SAMPLING FOR INCREMENTAL TRAINING"}, {"text": "One key component of incremental training is to select proper data to further train the model [8] . Naively, we could use all tweets from the latest year to continuously train the model built previously. However, training models like BERT are known to be computationally expensive, particularly with a large dataset such as an entire year of tweets. To reduce the training cost and make the incremental training feasible, one simple approach is to randomly sample some sizable data from the new year's tweets as the training dataset. However, a random sample may not fully capture the evolution of the language.", "cite_spans": [{"start": 94, "end": 97, "text": "[8]", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "EFFECTIVE SAMPLING FOR INCREMENTAL TRAINING"}, {"text": "We, thus, propose three sampling approaches to mine representative tweets that contain evolving content (eg, new tokens or tokens that are likely to have undergone semantic shift), which is in the spirit of active learning. Our intuition is that new instances tend to contain evolving content if the current model performs poorly on them, or their embeddings have changed dramatically since the training of the last model. We detail the three approaches below. All three approaches run iteratively to detect representative examples and keep improving the model. In addition, we would like to highlight that the application of our proposed methods is not limited", "cite_spans": [], "ref_spans": [], "section": "EFFECTIVE SAMPLING FOR INCREMENTAL TRAINING"}, {"text": "We leverage the change of a token's embedding as a signal for evolving language. In each iteration, we compute the cosine distance between a token's embedding from the updated model and its preceding version. For the first iteration of training, we compare the incremental model vocabulary with the base model's vocabulary to identify new tokens. We give higher weights to tweets containing new tokens when sampling. For successive iterations, we identify top tokens which exhibit the largest shift in their embeddings between the current model and its preceding version, where is domain dependent (ie, how fast the vocabulary evolves between successive time-periods). When sampling, we assign large weights to the tweets that contain tokens with large embedding shift. In addition, we observe that tokens in a short tweet tend to have a larger embedding shift. Therefore, we linearly combine embedding cosine distance and normalized tweet length as the sampling weight.", "cite_spans": [], "ref_spans": [], "section": "Token Embedding Shift Method"}, {"text": "Algorithm 2 in Appendix A.E details this iterative approach. In the first iteration, we randomly sample some tokens if the vocabulary does not change; otherwise, we pick tokens that are newly added to the vocabulary. In the later iterations, we use tokens' shift in embeddings to perform a weighted random sampling and then, continuously train the model. We repeat this process for iterations, where is a tunable parameter.", "cite_spans": [], "ref_spans": [], "section": "Token Embedding Shift Method"}, {"text": "Similar to the token embedding shift method, we measure the embedding shift via cosine distance for a sentence (ie, a tweet) between the updated model and its previous version. Following the convention, we consider the [CLS] token embedding as the sentence embedding. Again, longer sentences are assigned a larger weight because short sentences tend to have larger embedding variances. We use the combination of embedding cosine distance and tweet length to perform weighted random sampling, and iteratively update the model for iterations (detailed in Algorithm 2 in Appendix A.E).", "cite_spans": [], "ref_spans": [], "section": "Sentence Embedding Shift Method"}, {"text": "Token Masked Language Modeling (MLM) loss is a pre-training loss proposed by BERT. It measures whether a model can successfully predict a token when the token is masked out from the model's input. Different from its original form in BERT pre-training, we can apply it to either a pre-trained or a fine-tuned model to identify tweets with token semantic shift. Here, we modify the task definition to fit our use-case. We don't mask out any tokens from the model input. Instead, we take the last layer of the pre-trained BERT, directly mask out tokens from that layer, and then use the surrounding tokens from the same layer to predict the masked tokens. The benefit of doing this is as follows: when a model (fine-tuned on some task(s)) is being served online, we don't need to change either the model's input or output to calculate the new MLM loss. When the fine-tuned model is inferred, we just need to take the last layer of the pre-trained model (not that of the fine-tuned model) and compute the losses. The model's online serving quality won't be affected and the token MLM loss calculation is not only light-weight, but can also be piggy-backed to model serving. This method can also run iteratively using the proposed Algorithm 2 (Appendix A.E).", "cite_spans": [], "ref_spans": [], "section": "Token MLM Loss Method"}, {"text": "Deployed Model. Figure 1 shows the conceptual architecture of a production system based on our incremental training method. The initial model is pre-trained using vocabulary and tweets derived from a particular \"base\" time-period. This base model is further fine-tuned with task specific data and deployed to serve real-time traffic. For incremental training, \"Token MLM Loss\" sampling strategy is used to mine representative tweets because of its strong performance and unique benefits (elaborated in Section 6).", "cite_spans": [], "ref_spans": [{"start": 16, "end": 24, "text": "Figure 1", "ref_id": "FIGREF0"}], "section": "Token MLM Loss Method"}, {"text": "During model serving, token MLM loss is additionally computed and stored with the data. Whenever there is a significant MLM loss increase on the new data, a new incremental training epoch will be triggered. We draw hard examples from the new data, update the model vocabulary, and incrementally pre-train with these examples. We then fine-tune the model for the specific task, and deploy the resulting model. We continue to train new epochs as needed, to keep the model up-to-date with the evolving data stream.", "cite_spans": [], "ref_spans": [], "section": "Token MLM Loss Method"}, {"text": "In this section, we evaluate our proposed dynamic modeling and efficient incremental training strategies on rapidly evolving Twitter content. We choose to use Twitter data for our experiments as it is one of the large scale publicly available datasets. We describe the experimental settings for model pre-training, training cost savings, two downstream tasks for model evaluation, and conclude by discussing the experimental results.", "cite_spans": [], "ref_spans": [], "section": "EXPERIMENTS"}, {"text": "We describe the data and detail its pre-processing in Appendix A.C. In all our experiments, we use a 12 layer BERT and MLM loss as our pre-training objective. To simplify our discussion, we define two types of models:", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "\u2022 Base Model This is a fully trained model with one year's tweets. We initialize it using the original BERT-Base model [11] . Its vocabulary is updated once from the original BERT-Base model vocabulary using Algorithm 1 (Section 3.4) except that we do not remove any tokens from the original vocabulary (as its size is around 30k). In other words, base model vocabulary is the union of BERT-Base model vocabulary and optimized wordpieces (and hashtags if the vocabulary composition includes whole hashtags) from that year. \u2022 Incremental Model This is a model incrementally trained based on the previous year's base model. Its vocabulary is iteratively updated from the prior year's base model vocabulary, again using Algorithm 1 (Section 3.4). We initialize the embeddings for common tokens for the incremental model from the corresponding embeddings of the base model and randomly initialize the embeddings for the newly added tokens, when we start training.", "cite_spans": [{"start": 119, "end": 123, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Pre-training"}, {"text": "Note that we opt to train incremental models using the previous year's base model only and not using the data accumulated over several past years. This simulates the effectiveness of continuously adapting a trained model in a production setting (serving online traffic).", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "For both models, we keep the vocabulary size fixed at 65K. When whole hashtags are included in the vocabulary, we reserve 15K for them and use the rest 50K for wordpieces generated by the WordPiece tokenizer.", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "For every year, we randomly split the sampled 50M tweets into 45M for training and 5M for evaluation. All base models are trained for 2.6M steps with 45M tweets. For incremental models, we start from a 2M step base model checkpoint from previous year, sample some new year's tweets and incrementally train the model for additional 600k steps. This strict setting to have both kinds of models trained for identical number of steps (2.6M) aims to ensure a fair comparison between their results.", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "For incremental training, we implement two simple sampling methods as baselines to compare against our proposed sampling approaches (Section 4):", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "\u2022 Uniform Random Sampling We draw a sample uniformly at random from the new year's tweets. \u2022 Weighted Random Sampling We draw a random sample weighted by the number of wordpiece tokens in the tweet. Since longer tweets tend to be more informative and contain evolving content, we favor longer tweets than shorter ones in the sampling. This method shows some empirical benefits in our experiments.", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "Each baseline samples 24M tweets from the 45M pool to continuously train a model starting with a base model from previous year for an additional 600K steps. An incremental model is trained iteratively, ie, sampling new tweets using our proposed sampling methods and updating the model in each iteration. We empirically use three iterations, and in each iteration train the model for 200K steps with newly sampled tweets in this iteration together with all tweets sampled in the previous iterations. To be specific, we draw a sample of 10M, 8M, and 6M tweets for the first, second and, third iterations, respectively. All sampling is performed without replacement. Our incremental models will see 24M unique tweets in total (other than the 45M examples used for training the base model), which is the same amount of tweets used for baseline sampling models. We describe the hyperparameters used for training in Appendix A.D.", "cite_spans": [], "ref_spans": [], "section": "Pre-training"}, {"text": "Compared to training a base model from scratch (2.6M steps), our proposed architecture for training an incremental model in Figure 1 significantly reduces the training cost. Since the cost of incremental training is only 600k steps, we save 2M steps which yields a cost savings of 76.9% relative to the base model.", "cite_spans": [], "ref_spans": [{"start": 124, "end": 132, "text": "Figure 1", "ref_id": "FIGREF0"}], "section": "Training Cost Savings"}, {"text": "As briefly described in Section 3, we assess the model performance with two downstream tasks:", "cite_spans": [], "ref_spans": [], "section": "Evaluation"}, {"text": "\u2022 Country Hashtag Prediction (2014 and 2017): This task aims to predict the associated country hashtag for a tweet from a pre-defined country list (detailed in Appendix A.G).", "cite_spans": [], "ref_spans": [], "section": "Evaluation"}, {"text": "Note that training multiple end-to-end models for all years is resource intensive in terms of both compute and time. Hence, these two years which form a representative subset of all years (2013 -2019) were chosen for our experiments.", "cite_spans": [], "ref_spans": [], "section": "Evaluation"}, {"text": "\u2022 OffensEval 2019: OffensEval is one of the tasks under Se-mEval aimed at identifying if tweets are offensive (detailed in Appendix A.H). We expect Country Hashtag Prediction to be more sensitive to topical content like hashtags and semantically shifted words, while the OffensEval task (similar to other NLP tasks like sentiment analysis) is less so. We would like to evaluate our proposed architecture on both types of tasks.", "cite_spans": [], "ref_spans": [], "section": "Evaluation"}, {"text": "For all the downstream tasks, we fine-tune pre-trained models for 300K steps. As Country Hashtag Prediction is a multi-class classification task, we report micro-F1, macro-F1, and accuracy scores for all the models on the test set. Since OffensEval is a binary classification task, we report F1 score and AUC-ROC. \u2022 Among the incremental models, our three proposed sampling methods, \"Token Embedding\", \"Sentence Embedding\", and \"Token MLM Loss\" outperform the two baseline sampling methods by a large margin. For instance, \"Token Embedding\" performs better than the \"Weighted Sampling\" (the stronger baseline) by relatively 5.4% and 10.6% in Micro-F1 and Macro-F1, respectively. This demonstrates the effectiveness of our proposed incremental training sampling methods.", "cite_spans": [], "ref_spans": [], "section": "Evaluation"}, {"text": "Note that the performance of \"Base Model 2013\" on 2014 test data is very poor in comparison to \"Base Model 2016\" on 2017 test data. We claim that this results from the larger vocabulary shift for 2014 from 2013 compared to 2017 from 2016 as seen in Figures 2  and 3 . Difference in the shift between 2014 from 2013 vocabulary and 2017 from 2016 vocabulary is +5.73%, +3.44%, and +4.83% for natural words, wordpieces, and hashtags, respectively.", "cite_spans": [], "ref_spans": [{"start": 249, "end": 265, "text": "Figures 2  and 3", "ref_id": "FIGREF2"}], "section": "Results and Analysis"}, {"text": "The result trends in Table 5 and 6 are very similar. The only caveat is that for the OffensEval 2019 task, the performances of \"Base Model 2018\" and \"Base Model 2019\" are comparable. This may indicate that the semantic shift for offense related language is not significant from the year 2018 to 2019. But the advantages of incremental training, and the three new incremental training sampling methods proposed by this paper are still apparent. Our proposed methods show some gains compared to baseline methods for this task, though they are not statistically significant. All these results demonstrate that our proposed sampling methods are effective.", "cite_spans": [], "ref_spans": [{"start": 21, "end": 28, "text": "Table 5", "ref_id": "TABREF5"}], "section": "Results and Analysis"}, {"text": "In the experiments, our three proposed sampling approaches achieve comparable results. One natural question arises, which sampling method is more suitable for real-world applications? We recommend to adopt the \"Token MLM Loss\" sampling method, where we leverage the last layer of the pre-trained BERT, mask out some tokens and then, predict the masked tokens (detailed in Section 4.3). This computation can be easily plugged into model online serving, and thus, perform real-time monitoring of continuously evolving content. When the overall MLM loss has an obvious increase, the system could automatically initiate incremental training process. This is more flexible and timely than updating the model at fixed time intervals. As a future work, we will explore the benefits of automatic incremental training and investigate our model performance during longer periods of time and other types of evolving news and social media content.", "cite_spans": [], "ref_spans": [], "section": "DISCUSSION AND FUTURE WORK"}, {"text": "Modeling hashtags properly is important to the language model quality. In our experiments, we show that keeping popular hashtags as intact tokens in the vocabulary is very beneficial for hashtag sensitive tasks. However, there is still a large number of less popular hashtags being regarded as regular words, and thus, segmented into wordpiece tokens. In future work, we plan to explore alternative approaches for preserving hashtag information in dynamic language models.", "cite_spans": [], "ref_spans": [], "section": "DISCUSSION AND FUTURE WORK"}, {"text": "In this paper, we first demonstrate the importance of dynamic modeling for continuously evolving content. Then, starting from the possibility of employing a dynamic vocabulary, we propose a simple yet effective algorithm to tackle the problem of OOV new tokens and sub-optimal tokenization. Finally, we propose three effective sampling methods to detect the training examples which contain updated knowledge and use these examples to enable efficient incremental training. We conduct extensive experiments based on two classification tasks, and demonstrate the importance of using timely content when training BERT models. We also show that our proposed sampling methods for hard example mining are not only superior to random sampling, but are also suitable for continuous model adaptation while serving live traffic.", "cite_spans": [], "ref_spans": [], "section": "CONCLUSION"}, {"text": "In this section, we plot the vocabulary shifts between consecutive years for wordpieces and hashtags for the years 2013 -2019 using the top 40k tokens in each category in Figure 3 . ", "cite_spans": [], "ref_spans": [{"start": 171, "end": 179, "text": "Figure 3", "ref_id": "FIGREF4"}], "section": "A APPENDIX A.A Vocabulary Shift Analysis"}, {"text": "In Algorithm 1, we outline the steps for updating the model vocabulary for training, which is applicable to both base and incremental models.", "cite_spans": [], "ref_spans": [], "section": "A.B Model Vocabulary Update"}, {"text": "For BERT pre-training, we use the public Twitter crawl data for the years 2013 -2019 available on the Internet Archive 3 . As a pre-processing step, we lowercase the text and replace URLs, user mentions, and emails with the special tokens \"URL\", \"@USER\", and \"EMAIL\", respectively. As each year has varied number of 3 https://archive.org/details/twitterstream tweets, we randomly sample 50M unique tweets from every year for a fair comparison. These tweets are used for our initial analysis (Section 3), wordpiece vocabulary generation, and BERT model pre-training (Section 5).", "cite_spans": [], "ref_spans": [], "section": "A.C Data and Pre-processing"}, {"text": "Following the original BERT paper [11] , we mask out 15% of tokens for pre-training which uses the MLM loss objective. As tweets are generally short (historically, up to 140 characters; limit has been increased to 280 characters since late 2017), we set the maximum sequence length to be 32 wordpiece tokens and mask out a max of 5 tokens per tweet. For pre-training, we use a batch size of 256 and a learning rate of 1.5e-4. For fine-tuning, we use a batch size of 32 and a learning rate of 5e-8. For other hyperparameters, we use the same values as used for training the standard BERT model [11] .", "cite_spans": [{"start": 34, "end": 38, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 593, "end": 597, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "A.D Hyperparameters"}, {"text": "Algorithm 2 details the steps for sampling hard examples for incremental training. This applies to all three sampling methods described in Section 4.", "cite_spans": [], "ref_spans": [], "section": "A.E Effective Sampling for Incremental Training"}, {"text": "We perform weighted random sampling where weights are determined by a linear combination of the signal under consideration (eg, MLM loss for \"Token MLM Loss\" method) and normalized tweet length in conjunction with a random component. Here, length of a tweet is determined by the number of wordpiece tokens.", "cite_spans": [], "ref_spans": [], "section": "A.E Effective Sampling for Incremental Training"}, {"text": "Final weights for sampling is computed as follows:", "cite_spans": [], "ref_spans": [], "section": "A.E Effective Sampling for Incremental Training"}, {"text": "where is a random number drawn from the uniform distribution (0, 1), is the weight from the signal (dependent on the sampling strategy), is the normalized tweet length (1.0 if tweet_length >= 10, else _ \u210e 10 ), and is the parameter controlling the contribution between the weight derived from the signal and normalized tweet length (we set it to 0.5 in our experiments). Table 7 , we list five of the top topics/events associated with different country hashtags.", "cite_spans": [], "ref_spans": [{"start": 371, "end": 378, "text": "Table 7", "ref_id": "TABREF10"}], "section": "A.E Effective Sampling for Incremental Training"}, {"text": "For the Country Hashtag Prediction task, we collect 16 popular country hashtags (#australia, #canada, #china, #india, #iran, #iraq, #israel, #italy, #japan, #nigeria, #pakistan, #philippines, #russia, #syria, #uk, #usa) from our Twitter corpus, along with their associated tweets. Table 8 shows a few representative tweets for three of them. We use the tweets from two years, 2014 and 2017 to construct two datasets, which result in 472K tweets and 407K tweets, respectively. We remove all instances of the country hashtags and respective country names from the tweets, and randomly split them into 70% as training, 15% as dev, and the rest 15% as test sets. ", "cite_spans": [], "ref_spans": [{"start": 281, "end": 288, "text": "Table 8", "ref_id": "TABREF11"}], "section": "A.G Country Hashtag Prediction Task"}, {"text": "For our experiments, we use the OffensEval 2019 dataset [48] which contains 14K tweets posted in 2019. The original dataset has a very small test set (860 tweets). In order to have a sizable test set, we move 2240 tweets (chosen randomly) from the original training set to the test set. We further split the remainder of the original training set into training and dev sets. Our final dataset follows the ratio of 8/3/3 for train/dev/test. Table 9 shows a few representative tweets for this task. ", "cite_spans": [{"start": 56, "end": 60, "text": "[48]", "ref_id": "BIBREF47"}], "ref_spans": [{"start": 440, "end": 447, "text": "Table 9", "ref_id": "TABREF12"}], "section": "A.H OffensEval Task"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Language Change: Progress or Decay?", "authors": [{"first": "J", "middle": [], "last": "Aitchison", "suffix": ""}], "year": 2001, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Character-Level Language Modeling with Deeper Self-Attention", "authors": [{"first": "R", "middle": [], "last": "Al-Rfou", "suffix": ""}, {"first": "D", "middle": [], "last": "Choe", "suffix": ""}, {"first": "N", "middle": [], "last": "Constant", "suffix": ""}, {"first": "M", "middle": [], "last": "Guo", "suffix": ""}, {"first": "L", "middle": [], "last": "Jones", "suffix": ""}], "year": 2019, "venue": "AAAI", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Learning to Compute Word Embeddings On the Fly", "authors": [{"first": "D", "middle": [], "last": "Bahdanau", "suffix": ""}, {"first": "T", "middle": [], "last": "Bosc", "suffix": ""}, {"first": "S", "middle": [], "last": "Jastrzebski", "suffix": ""}, {"first": "E", "middle": [], "last": "Grefenstette", "suffix": ""}, {"first": "P", "middle": [], "last": "Vincent", "suffix": ""}, {"first": "Y", "middle": [], "last": "Bengio", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:1706.00286v3"]}}, "BIBREF3": {"ref_id": "b3", "title": "Dynamic Word Embeddings", "authors": [{"first": "R", "middle": [], "last": "Bamler", "suffix": ""}, {"first": "S", "middle": [], "last": "Mandt", "suffix": ""}], "year": 2017, "venue": "ICML", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Bayesian Neural Word Embedding", "authors": [{"first": "O", "middle": [], "last": "Barkan", "suffix": ""}], "year": 2017, "venue": "AAAI", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Why do new meanings occur? A cognitive typology of the motivations for lexical semantic change", "authors": [{"first": "A", "middle": [], "last": "Blank", "suffix": ""}], "year": 1999, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Enriching Word Vectors with Subword Information", "authors": [{"first": "P", "middle": [], "last": "Bojanowski", "suffix": ""}, {"first": "E", "middle": [], "last": "Grave", "suffix": ""}, {"first": "A", "middle": [], "last": "Joulin", "suffix": ""}, {"first": "T", "middle": [], "last": "Mikolov", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Endto-End Incremental Learning", "authors": [{"first": "F", "middle": ["M"], "last": "Castro", "suffix": ""}, {"first": "M", "middle": ["J"], "last": "Mar\u00edn-Jim\u00e9nez", "suffix": ""}, {"first": "N", "middle": [], "last": "Guil", "suffix": ""}, {"first": "C", "middle": [], "last": "Schmid", "suffix": ""}, {"first": "K", "middle": [], "last": "Alahari", "suffix": ""}], "year": 2018, "venue": "ECCV", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Automatically Identifying Changes in the Semantic Orientation of Words", "authors": [{"first": "P", "middle": [], "last": "Cook", "suffix": ""}, {"first": "S", "middle": [], "last": "Stevenson", "suffix": ""}], "year": 2010, "venue": "LREC", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Transformer-XL: Attentive Language Models beyond a Fixed-Length Context", "authors": [{"first": "Z", "middle": [], "last": "Dai", "suffix": ""}, {"first": "Z", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Yang", "suffix": ""}, {"first": "J", "middle": [], "last": "Carbonell", "suffix": ""}, {"first": "Q", "middle": [], "last": "Le", "suffix": ""}, {"first": "R", "middle": [], "last": "Salakhutdinov", "suffix": ""}], "year": 2019, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding", "authors": [{"first": "J", "middle": [], "last": "Devlin", "suffix": ""}, {"first": "M", "middle": ["W"], "last": "Chang", "suffix": ""}, {"first": "K", "middle": [], "last": "Lee", "suffix": ""}, {"first": "K", "middle": [], "last": "Toutanova", "suffix": ""}], "year": 2019, "venue": "NAACL-HLT", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Gated-Attention Readers for Text Comprehension", "authors": [{"first": "B", "middle": [], "last": "Dhingra", "suffix": ""}, {"first": "H", "middle": [], "last": "Liu", "suffix": ""}, {"first": "W", "middle": ["W"], "last": "Cohen", "suffix": ""}, {"first": "R", "middle": [], "last": "Salakhutdinov", "suffix": ""}], "year": 2017, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "A distributional similarity approach to the detection of semantic change in the Google Books Ngram corpus", "authors": [{"first": "K", "middle": [], "last": "Gulordava", "suffix": ""}, {"first": "M", "middle": [], "last": "Baroni", "suffix": ""}], "year": 2011, "venue": "GEMS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Diachronic Word Embeddings Reveal Statistical Laws of Semantic Change", "authors": [{"first": "W", "middle": ["L"], "last": "Hamilton", "suffix": ""}, {"first": "J", "middle": [], "last": "Leskovec", "suffix": ""}, {"first": "D", "middle": [], "last": "Jurafsky", "suffix": ""}], "year": 2016, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "High-risk learning: acquiring new word vectors from tiny data", "authors": [{"first": "A", "middle": [], "last": "Herbelot", "suffix": ""}, {"first": "M", "middle": [], "last": "Baroni", "suffix": ""}], "year": 2017, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Teaching Machines to Read and Comprehend", "authors": [{"first": "K", "middle": ["M"], "last": "Hermann", "suffix": ""}, {"first": "T", "middle": [], "last": "Ko\u010disk\u00fd", "suffix": ""}, {"first": "E", "middle": [], "last": "Grefenstette", "suffix": ""}, {"first": "L", "middle": [], "last": "Espeholt", "suffix": ""}, {"first": "W", "middle": [], "last": "Kay", "suffix": ""}, {"first": "M", "middle": [], "last": "Suleyman", "suffix": ""}, {"first": "P", "middle": [], "last": "Blunsom", "suffix": ""}], "year": 2015, "venue": "NIPS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Few-Shot Representation Learning for Out-Of-Vocabulary Words", "authors": [{"first": "Z", "middle": [], "last": "Hu", "suffix": ""}, {"first": "T", "middle": [], "last": "Chen", "suffix": ""}, {"first": "K", "middle": ["W"], "last": "Chang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Sun", "suffix": ""}], "year": 2019, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Less-forgetting Learning in Deep Neural Networks", "authors": [{"first": "H", "middle": [], "last": "Jung", "suffix": ""}, {"first": "J", "middle": [], "last": "Ju", "suffix": ""}, {"first": "M", "middle": [], "last": "Jung", "suffix": ""}, {"first": "J", "middle": [], "last": "Kim", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:1607.00122v1"]}}, "BIBREF18": {"ref_id": "b18", "title": "A La Carte Embedding: Cheap but Effective Induction of Semantic Feature Vectors", "authors": [{"first": "M", "middle": [], "last": "Khodak", "suffix": ""}, {"first": "N", "middle": [], "last": "Saunshi", "suffix": ""}, {"first": "Y", "middle": [], "last": "Liang", "suffix": ""}, {"first": "T", "middle": [], "last": "Ma", "suffix": ""}, {"first": "B", "middle": [], "last": "Stewart", "suffix": ""}, {"first": "S", "middle": [], "last": "Arora", "suffix": ""}], "year": 2018, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Character-Aware Neural Language Models", "authors": [{"first": "Y", "middle": [], "last": "Kim", "suffix": ""}, {"first": "Y", "middle": [], "last": "Jernite", "suffix": ""}, {"first": "D", "middle": [], "last": "Sontag", "suffix": ""}, {"first": "A", "middle": ["M"], "last": "Rush", "suffix": ""}], "year": 2016, "venue": "AAAI", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Innateness and culture in the evolution of language", "authors": [{"first": "S", "middle": [], "last": "Kirby", "suffix": ""}, {"first": "M", "middle": [], "last": "Dowman", "suffix": ""}, {"first": "T", "middle": ["L"], "last": "Griffiths", "suffix": ""}], "year": 2007, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "SentencePiece: A simple and language independent subword tokenizer and detokenizer for Neural Text Processing", "authors": [{"first": "T", "middle": [], "last": "Kudo", "suffix": ""}, {"first": "J", "middle": [], "last": "Richardson", "suffix": ""}], "year": 2018, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Statistically Significant Detection of Linguistic Change", "authors": [{"first": "V", "middle": [], "last": "Kulkarni", "suffix": ""}, {"first": "R", "middle": [], "last": "Al-Rfou", "suffix": ""}, {"first": "B", "middle": [], "last": "Perozzi", "suffix": ""}, {"first": "S", "middle": [], "last": "Skiena", "suffix": ""}], "year": 2015, "venue": "WWW", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Diachronic word embeddings and semantic shifts: a survey", "authors": [{"first": "A", "middle": [], "last": "Kutuzov", "suffix": ""}, {"first": "L", "middle": [], "last": "\u00d8vrelid", "suffix": ""}, {"first": "T", "middle": [], "last": "Szymanski", "suffix": ""}, {"first": "E", "middle": [], "last": "Velldal", "suffix": ""}], "year": 2018, "venue": "COLING", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "Pitfalls of Static Language Modelling", "authors": [{"first": "A", "middle": [], "last": "Lazaridou", "suffix": ""}, {"first": "A", "middle": [], "last": "Kuncoro", "suffix": ""}, {"first": "E", "middle": [], "last": "Gribovskaya", "suffix": ""}, {"first": "D", "middle": [], "last": "Agrawal", "suffix": ""}, {"first": "A", "middle": [], "last": "Liska", "suffix": ""}, {"first": "T", "middle": [], "last": "Terzi", "suffix": ""}, {"first": "M", "middle": [], "last": "Gimenez", "suffix": ""}, {"first": "C", "middle": ["M"], "last": "Autume", "suffix": ""}, {"first": "S", "middle": [], "last": "Ruder", "suffix": ""}, {"first": "D", "middle": [], "last": "Yogatama", "suffix": ""}, {"first": "K", "middle": [], "last": "Cao", "suffix": ""}, {"first": "T", "middle": [], "last": "Kocisky", "suffix": ""}, {"first": "S", "middle": [], "last": "Young", "suffix": ""}, {"first": "P", "middle": [], "last": "Blunsom", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:2102.01951v1"]}}, "BIBREF25": {"ref_id": "b25", "title": "Multimodal Word Meaning Induction From Minimal Exposure to Natural Text", "authors": [{"first": "A", "middle": [], "last": "Lazaridou", "suffix": ""}, {"first": "M", "middle": [], "last": "Marelli", "suffix": ""}, {"first": "M", "middle": [], "last": "Baroni", "suffix": ""}], "year": 2017, "venue": "Cognitive Science", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Finding Function in Form: Compositional Character Models for Open Vocabulary Word Representation", "authors": [{"first": "W", "middle": [], "last": "Ling", "suffix": ""}, {"first": "C", "middle": [], "last": "Dyer", "suffix": ""}, {"first": "A", "middle": ["W"], "last": "Black", "suffix": ""}, {"first": "I", "middle": [], "last": "Trancoso", "suffix": ""}, {"first": "R", "middle": [], "last": "Fermandez", "suffix": ""}, {"first": "S", "middle": [], "last": "Amir", "suffix": ""}, {"first": "L", "middle": [], "last": "Marujo", "suffix": ""}, {"first": "T", "middle": [], "last": "Lu\u00eds", "suffix": ""}], "year": 2015, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Vocabulary Manipulation for Neural Machine Translation", "authors": [{"first": "H", "middle": [], "last": "Mi", "suffix": ""}, {"first": "Z", "middle": [], "last": "Wang", "suffix": ""}, {"first": "A", "middle": [], "last": "Ittycheriah", "suffix": ""}], "year": 2016, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF29": {"ref_id": "b29", "title": "Efficient Estimation of Word Representations in Vector Space", "authors": [{"first": "T", "middle": [], "last": "Mikolov", "suffix": ""}, {"first": "K", "middle": [], "last": "Chen", "suffix": ""}, {"first": "G", "middle": [], "last": "Corrado", "suffix": ""}, {"first": "J", "middle": [], "last": "Dean", "suffix": ""}], "year": 2013, "venue": "ICLR", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "BERTweet: A pre-trained language model for English Tweets", "authors": [{"first": "D", "middle": ["Q"], "last": "Nguyen", "suffix": ""}, {"first": "T", "middle": [], "last": "Vu", "suffix": ""}, {"first": "A", "middle": ["T"], "last": "Nguyen", "suffix": ""}], "year": 2020, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF31": {"ref_id": "b31", "title": "Mimicking Word Embeddings using Subword RNNs", "authors": [{"first": "Y", "middle": [], "last": "Pinter", "suffix": ""}, {"first": "R", "middle": [], "last": "Guthrie", "suffix": ""}, {"first": "J", "middle": [], "last": "Eisenstein", "suffix": ""}], "year": 2017, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF32": {"ref_id": "b32", "title": "2017. iCaRL: Incremental Classifier and Representation Learning", "authors": [{"first": "S", "middle": ["A"], "last": "Rebuffi", "suffix": ""}, {"first": "A", "middle": [], "last": "Kolesnikov", "suffix": ""}, {"first": "G", "middle": [], "last": "Sperl", "suffix": ""}, {"first": "C", "middle": ["H"], "last": "Lampert", "suffix": ""}], "year": null, "venue": "CVPR", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF33": {"ref_id": "b33", "title": "Dynamic Embeddings for Language Evolution", "authors": [{"first": "M", "middle": [], "last": "Rudolph", "suffix": ""}, {"first": "D", "middle": [], "last": "Blei", "suffix": ""}], "year": 2018, "venue": "The Web Conference", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF34": {"ref_id": "b34", "title": "Exponential Family Embeddings", "authors": [{"first": "M", "middle": ["R"], "last": "Rudolph", "suffix": ""}, {"first": "F", "middle": ["J R"], "last": "Ruiz", "suffix": ""}, {"first": "S", "middle": [], "last": "Mandt", "suffix": ""}, {"first": "D", "middle": ["M"], "last": "Blei", "suffix": ""}], "year": 2016, "venue": "NIPS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF35": {"ref_id": "b35", "title": "Semantic Density Analysis: Comparing word meaning across time and phonetic space", "authors": [{"first": "E", "middle": [], "last": "Sagi", "suffix": ""}, {"first": "S", "middle": [], "last": "Kaufmann", "suffix": ""}, {"first": "B", "middle": [], "last": "Clark", "suffix": ""}], "year": 2009, "venue": "GEMS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF36": {"ref_id": "b36", "title": "Neural Machine Translation of Rare Words with Subword Units", "authors": [{"first": "R", "middle": [], "last": "Sennrich", "suffix": ""}, {"first": "B", "middle": [], "last": "Haddow", "suffix": ""}, {"first": "A", "middle": [], "last": "Birch", "suffix": ""}], "year": 2016, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF37": {"ref_id": "b37", "title": "The Cost of Training NLP Models: A Concise Overview", "authors": [{"first": "O", "middle": [], "last": "Sharir", "suffix": ""}, {"first": "B", "middle": [], "last": "Peleg", "suffix": ""}, {"first": "Y", "middle": [], "last": "Shoham", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:2004.08900v1"]}}, "BIBREF38": {"ref_id": "b38", "title": "Incremental Learning of Object Detectors without Catastrophic Forgetting", "authors": [{"first": "K", "middle": [], "last": "Shmelkov", "suffix": ""}, {"first": "C", "middle": [], "last": "Schmid", "suffix": ""}, {"first": "K", "middle": [], "last": "Alahari", "suffix": ""}], "year": 2017, "venue": "ICCV", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF39": {"ref_id": "b39", "title": "Energy and Policy Considerations for Deep Learning in NLP", "authors": [{"first": "E", "middle": [], "last": "Strubell", "suffix": ""}, {"first": "A", "middle": [], "last": "Ganesh", "suffix": ""}, {"first": "A", "middle": [], "last": "Mccallum", "suffix": ""}], "year": 2019, "venue": "ACL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF40": {"ref_id": "b40", "title": "Character n-Gram Embeddings to Improve RNN Language Models", "authors": [{"first": "S", "middle": [], "last": "Takase", "suffix": ""}, {"first": "J", "middle": [], "last": "Suzuki", "suffix": ""}, {"first": "M", "middle": [], "last": "Nagata", "suffix": ""}], "year": 2019, "venue": "AAAI", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF41": {"ref_id": "b41", "title": "Regularity in Semantic Change", "authors": [{"first": "E", "middle": ["C"], "last": "Traugott", "suffix": ""}, {"first": "R", "middle": ["B"], "last": "Dasher", "suffix": ""}], "year": 2001, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF42": {"ref_id": "b42", "title": "Semantics: An Introduction to the Science of Meaning", "authors": [{"first": "S", "middle": [], "last": "Ullmann", "suffix": ""}], "year": 1962, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF43": {"ref_id": "b43", "title": "Improving Pre-Trained Multilingual Model with Vocabulary Expansion", "authors": [{"first": "H", "middle": [], "last": "Wang", "suffix": ""}, {"first": "D", "middle": [], "last": "Yu", "suffix": ""}, {"first": "K", "middle": [], "last": "Sun", "suffix": ""}, {"first": "J", "middle": [], "last": "Chen", "suffix": ""}, {"first": "D", "middle": [], "last": "Yu", "suffix": ""}], "year": 2019, "venue": "CoNLL", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF44": {"ref_id": "b44", "title": "Charagram: Embedding Words and Sentences via Character n-grams", "authors": [{"first": "J", "middle": [], "last": "Wieting", "suffix": ""}, {"first": "M", "middle": [], "last": "Bansal", "suffix": ""}, {"first": "K", "middle": [], "last": "Gimpel", "suffix": ""}, {"first": "K", "middle": [], "last": "Livescu", "suffix": ""}], "year": 2016, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF45": {"ref_id": "b45", "title": "Google's Neural Machine Translation System: Bridging the Gap between Human and Machine Translation", "authors": [{"first": "Y", "middle": [], "last": "Wu", "suffix": ""}, {"first": "M", "middle": [], "last": "Schuster", "suffix": ""}, {"first": "Z", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Q", "middle": ["V"], "last": "Le", "suffix": ""}, {"first": "M", "middle": [], "last": "Norouzi", "suffix": ""}, {"first": "W", "middle": [], "last": "Macherey", "suffix": ""}, {"first": "M", "middle": [], "last": "Krikun", "suffix": ""}, {"first": "Y", "middle": [], "last": "Cao", "suffix": ""}, {"first": "Q", "middle": [], "last": "Gao", "suffix": ""}, {"first": "K", "middle": [], "last": "Macherey", "suffix": ""}, {"first": "J", "middle": [], "last": "Klingner", "suffix": ""}, {"first": "A", "middle": [], "last": "Shah", "suffix": ""}, {"first": "M", "middle": [], "last": "Johnson", "suffix": ""}, {"first": "X", "middle": [], "last": "Liu", "suffix": ""}, {"first": "L", "middle": [], "last": "Kaiser", "suffix": ""}, {"first": "S", "middle": [], "last": "Gouws", "suffix": ""}, {"first": "Y", "middle": [], "last": "Kato", "suffix": ""}, {"first": "T", "middle": [], "last": "Kudo", "suffix": ""}, {"first": "H", "middle": [], "last": "Kazawa", "suffix": ""}, {"first": "K", "middle": [], "last": "Stevens", "suffix": ""}, {"first": "G", "middle": [], "last": "Kurian", "suffix": ""}, {"first": "N", "middle": [], "last": "Patil", "suffix": ""}, {"first": "W", "middle": [], "last": "Wang", "suffix": ""}, {"first": "C", "middle": [], "last": "Young", "suffix": ""}, {"first": "J", "middle": [], "last": "Smith", "suffix": ""}, {"first": "J", "middle": [], "last": "Riesa", "suffix": ""}, {"first": "A", "middle": [], "last": "Rudnick", "suffix": ""}, {"first": "O", "middle": [], "last": "Vinyals", "suffix": ""}, {"first": "G", "middle": [], "last": "Corrado", "suffix": ""}, {"first": "M", "middle": [], "last": "Hughes", "suffix": ""}, {"first": "J", "middle": [], "last": "Dean", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:1609.08144"]}}, "BIBREF46": {"ref_id": "b46", "title": "Dynamic Word Embeddings for Evolving Semantic Discovery", "authors": [{"first": "Z", "middle": [], "last": "Yao", "suffix": ""}, {"first": "Y", "middle": [], "last": "Sun", "suffix": ""}, {"first": "W", "middle": [], "last": "Ding", "suffix": ""}, {"first": "N", "middle": [], "last": "Rao", "suffix": ""}, {"first": "H", "middle": [], "last": "Xiong", "suffix": ""}], "year": 2018, "venue": "WSDM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF47": {"ref_id": "b47", "title": "SemEval-2019 Task 6: Identifying and Categorizing Offensive Language in Social Media (OffensEval)", "authors": [{"first": "M", "middle": [], "last": "Zampieri", "suffix": ""}, {"first": "S", "middle": [], "last": "Malmasi", "suffix": ""}, {"first": "P", "middle": [], "last": "Nakov", "suffix": ""}, {"first": "S", "middle": [], "last": "Rosenthal", "suffix": ""}, {"first": "N", "middle": [], "last": "Farra", "suffix": ""}, {"first": "R", "middle": [], "last": "Kumar", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF48": {"ref_id": "b48", "title": "Character-level Convolutional Networks for Text Classification", "authors": [{"first": "X", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "J", "middle": [], "last": "Zhao", "suffix": ""}, {"first": "Y", "middle": [], "last": "Lecun", "suffix": ""}], "year": 2015, "venue": "NIPS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF49": {"ref_id": "b49", "title": "Omnia Mutantur, Nihil Interit: Connecting Past with Present by Finding Corresponding Terms across Time", "authors": [{"first": "Y", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "A", "middle": [], "last": "Jatowt", "suffix": ""}, {"first": "S", "middle": [], "last": "Bhowmick", "suffix": ""}, {"first": "K", "middle": [], "last": "Tanaka", "suffix": ""}], "year": 2015, "venue": "AACL-IJCNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Overview of System Architecture for Incremental Training of a Production Model.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Base Model 2016 0.418 \u00b1 0.003 0.265 \u00b1 0.002 0.411 \u00b1 0.003 Base Model 2017 0.561 \u00b1 0.003 0.493 \u00b1 0.003 0.550 \u00b1 0.003", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Vocabulary shift (%) for natural words using the top 40k tokens. Corresponding figures for wordpieces and hashtags can be found in Appendix A.A.", "latex": null, "type": "figure"}, "FIGREF3": {"text": "670 \u00b1 0.003 0.598 \u00b1 0.003 0.660 \u00b1 0.003 Sentence Embedding 0.670 \u00b1 0.003 0.600 \u00b1 0.003 0.660 \u00b1 0.003 Token MLM Loss 0.670 \u00b1 0.003 0.598 \u00b1 0.003 0.661 \u00b1 0.003", "latex": null, "type": "figure"}, "FIGREF4": {"text": "Vocabulary shift (%) for wordpieces (regular vocabulary, no hashtags) and hashtags using the top 40k tokens for the respective categories.", "latex": null, "type": "figure"}, "TABREF0": {"text": "Results on 2017 Country Hashtag Prediction.", "latex": null, "type": "table"}, "TABREF1": {"text": "Among them, hashtags exhibit the largest year-over-year shifts: 2014 and 2019 change by 58.75% and 78.31%, respectively, compared to 2013. Since hashtags are the topic indicators for the posts, these huge shifts also validate that the content on Twitter is drastically evolving. Natural words change by 18.31% and 37.49% for 2014 and 2019, respectively, compared to 2013. Wordpieces follow similar trends, changing 19.63% and 38.47% in 2014 and 2019, respectively, compared to 2013.", "latex": null, "type": "table"}, "TABREF2": {"text": "Performance using different Hashtag Vocabulary Composition for 2017 Country Hashtag Prediction.", "latex": null, "type": "table"}, "TABREF3": {"text": "Performance using different Hashtag Vocabulary Composition for OffensEval 2019.", "latex": null, "type": "table"}, "TABREF4": {"text": "Results for 2014 Country Hashtag Prediction.", "latex": null, "type": "table"}, "TABREF5": {"text": "Results for 2017 Country Hashtag Prediction.", "latex": null, "type": "table"}, "TABREF6": {"text": "Results for OffensEval 2019.", "latex": null, "type": "table"}, "TABREF7": {"text": "In the three tables, the results for all models follow the same trend, and we, thus, focus on the 2014 Country Hashtag Prediction task(Table 4) in the following discussion. Our major findings are:", "latex": null, "type": "table"}, "TABREF8": {"text": "Algorithm 1: Model Vocabulary UpdateResult: Updated Model Vocabulary if Model performance deteriorates and model needs update then NewVocabulary = \u2205; CurrentVocabulary{\"hashtags\"} NewHashtags); SortedNewHashtags = SortedNewHashtags \\ NewVocabulary; for i = 1; i <= Count(CurrentVocabulary{\"hashtags\"} \\ NewHashtags); i = i + 1 do", "latex": null, "type": "table"}, "TABREF9": {"text": "Effective Sampling for Incremental Training Result: A model incrementally trained for n iterations PrecedingModel = null; CurrentModel = BaseModel; SelectedSignal = One of TokenEmbeddingShift, SentenceEmbeddingShift or TokenMLMLoss; for k = 1; k <= n; k = k + 1 do /* Assign MinWeight to m examples to sample from. */ SamplingWeights = [MinWeight] * m; if k = 1 then /* Note: For \"SentenceEmbeddingShift\", for 1st iteration, we just weight tweets by their length. */ if SelectedSignal == TokenEmbeddingShift then SamplingWeights.AdjustBy(cumulative weight of new tokens); end if SelectedSignal == TokenMLMLoss then SamplingWeights.AdjustBy(MLM loss); end end else SignalValues = SelectedSignal.Shift(CurrentModel, PrecedingModel); SamplingWeights.AdjustBy(SignalValues); end SamplingWeights.AdjustBy(tweet length); NewExamples = WeightedRandomSample(SamplingWeights); TrainingExamples = TrainingExamples NewExamples; NewModel = Train(CurrentModel, TrainingExamples); PrecedingModel = CurrentModel; CurrentModel = NewModel; end A.F Topics Associated With Country Hashtags", "latex": null, "type": "table"}, "TABREF10": {"text": "Top Example Topics For Country Hashtags.", "latex": null, "type": "table"}, "TABREF11": {"text": "Example Tweets associated with Country Hashtags. Hashtag Tweets #canada British Columbia News-Canada launches pilot program for spouses waiting for permanent residency.. #canada #iran #MaryamRajavi's Biography:The #Iran of Tomorrow #Women #Lebanon #CampLiberty #HumanRights #usa Aaaaand it went to the shootout but TJ Oshie wins it for #USA over Russia! What. A. Game. #Sochi2014 Hashtag Tweets #canada #NegativeRates could hit #Canada sooner than most expect due to #economy's ties to the Housing Market #iran Guardian Council Spokesman Abbas-Ali Kadkhodaei said #women could become candidates in the upcoming presidential elections in #Iran. #usa Fans flock to get new Chiefs gear after team captures AFC West title #USA", "latex": null, "type": "table"}, "TABREF12": {"text": "Example Tweets for OffensEval 2019. Tweets OFFENSIVE You are a fool. Denying ones free speech is deny all of our free speech. NOT OFFEN-SIVE Tell me did restoring your computer to an earlier date correct your problem you were having ?", "latex": null, "type": "table"}}, "back_matter": []}